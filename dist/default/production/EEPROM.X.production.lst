

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Aug 01 09:05:24 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.42
    14                           ; Generated 13/04/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  000B                     _INTCONbits	set	11
   126  0003                     _STATUSbits	set	3
   127  005F                     _GIE	set	95
   128  008F                     _OSCCONbits	set	143
   129  010C                     _EEDATA	set	268
   130  010D                     _EEADR	set	269
   131  018D                     _EECON2	set	397
   132  018C                     _EECON1bits	set	396
   133                           
   134                           ; #config settings
   135  0000                     
   136                           	psect	cinit
   137  07FC                     start_initialization:	
   138  07FC                     __initialization:	
   139  07FC                     end_of_initialization:	
   140                           ;End of C runtime variable initialization code
   141                           
   142  07FC                     __end_of__initialization:	
   143  07FC  0183               	clrf	3
   144  07FD  120A  118A  2FCE   	ljmp	_main	;jump to C main() function
   145                           
   146                           	psect	cstackCOMMON
   147  0070                     __pcstackCOMMON:	
   148  0070                     ?_initSystem:	
   149  0070                     ??_initSystem:	
   150                           ; 1 bytes @ 0x0
   151                           
   152  0070                     ?_writeEEPROM:	
   153                           ; 1 bytes @ 0x0
   154                           
   155  0070                     ?_readEEPROM:	
   156                           ; 1 bytes @ 0x0
   157                           
   158  0070                     ??_readEEPROM:	
   159                           ; 1 bytes @ 0x0
   160                           
   161  0070                     ?_initOSC:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  0070                     ??_initOSC:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  0070                     readEEPROM@address:	
   168                           ; 1 bytes @ 0x0
   169                           
   170  0070                     writeEEPROM@data:	
   171                           ; 1 bytes @ 0x0
   172                           
   173                           
   174                           ; 1 bytes @ 0x0
   175  0070                     	ds	1
   176  0071                     ??_writeEEPROM:	
   177  0071                     writeEEPROM@address:	
   178                           ; 1 bytes @ 0x1
   179                           
   180                           
   181                           ; 1 bytes @ 0x1
   182  0071                     	ds	1
   183  0072                     ?_main:	
   184  0072                     main@argc:	
   185                           ; 2 bytes @ 0x2
   186                           
   187                           
   188                           ; 2 bytes @ 0x2
   189  0072                     	ds	2
   190  0074                     main@argv:	
   191                           
   192                           ; 2 bytes @ 0x4
   193  0074                     	ds	2
   194  0076                     ??_main:	
   195                           
   196                           ; 1 bytes @ 0x6
   197  0076                     	ds	1
   198  0077                     main@read_char:	
   199                           
   200                           ; 1 bytes @ 0x7
   201  0077                     	ds	1
   202  0078                     main@eeprom_address:	
   203                           
   204                           ; 1 bytes @ 0x8
   205  0078                     	ds	1
   206  0079                     main@write_char:	
   207                           
   208                           ; 1 bytes @ 0x9
   209  0079                     	ds	1
   210                           
   211                           	psect	maintext
   212  07CE                     __pmaintext:	
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 77 in file "main.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;  argc            2    2[COMMON] int 
   221 ;;  argv            2    4[COMMON] PTR PTR unsigned char 
   222 ;; Auto vars:     Size  Location     Type
   223 ;;  write_char      1    9[COMMON] unsigned char 
   224 ;;  eeprom_addre    1    8[COMMON] unsigned char 
   225 ;;  read_char       1    7[COMMON] unsigned char 
   226 ;; Return value:  Size  Location     Type
   227 ;;                  2    2[COMMON] int 
   228 ;; Registers used:
   229 ;;		wreg, status,2, status,0, pclath, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : B00/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   235 ;;      Params:         4       0       0       0       0
   236 ;;      Locals:         3       0       0       0       0
   237 ;;      Temps:          1       0       0       0       0
   238 ;;      Totals:         8       0       0       0       0
   239 ;;Total ram usage:        8 bytes
   240 ;; Hardware stack levels required when called:    2
   241 ;; This function calls:
   242 ;;		_initSystem
   243 ;;		_readEEPROM
   244 ;;		_writeEEPROM
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           
   251                           ;psect for function _main
   252  07CE                     _main:	
   253                           
   254                           ;main.c: 79: unsigned char eeprom_address = 0;
   255                           
   256                           ;incstack = 0
   257                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   258  07CE  01F8               	clrf	main@eeprom_address
   259                           
   260                           ;main.c: 80: unsigned char write_char;
   261                           ;main.c: 81: unsigned char read_char;
   262                           ;main.c: 83: initSystem();
   263  07CF  120A  118A  278F  120A  118A  	fcall	_initSystem
   264                           
   265                           ;main.c: 84: for(write_char = 'A'; write_char <= 'Z'; write_char++){
   266  07D4  3041               	movlw	65
   267  07D5  00F6               	movwf	??_main
   268  07D6  0876               	movf	??_main,w
   269  07D7  00F9               	movwf	main@write_char
   270  07D8  305B               	movlw	91
   271  07D9  0279               	subwf	main@write_char,w
   272  07DA  1803               	btfsc	3,0
   273  07DB  2FFB               	goto	l32
   274  07DC                     l605:	
   275                           
   276                           ;main.c: 85: writeEEPROM(eeprom_address, write_char);
   277  07DC  0879               	movf	main@write_char,w
   278  07DD  00F6               	movwf	??_main
   279  07DE  0876               	movf	??_main,w
   280  07DF  00F0               	movwf	writeEEPROM@data
   281  07E0  0878               	movf	main@eeprom_address,w
   282  07E1  120A  118A  27AB  120A  118A  	fcall	_writeEEPROM
   283                           
   284                           ;main.c: 86: read_char = readEEPROM(eeprom_address);
   285  07E6  0878               	movf	main@eeprom_address,w
   286  07E7  120A  118A  279E  120A  118A  	fcall	_readEEPROM
   287  07EC  00F6               	movwf	??_main
   288  07ED  0876               	movf	??_main,w
   289  07EE  00F7               	movwf	main@read_char
   290                           
   291                           ;main.c: 87: eeprom_address++;
   292  07EF  3001               	movlw	1
   293  07F0  00F6               	movwf	??_main
   294  07F1  0876               	movf	??_main,w
   295  07F2  07F8               	addwf	main@eeprom_address,f
   296  07F3  3001               	movlw	1
   297  07F4  00F6               	movwf	??_main
   298  07F5  0876               	movf	??_main,w
   299  07F6  07F9               	addwf	main@write_char,f
   300  07F7  305B               	movlw	91
   301  07F8  0279               	subwf	main@write_char,w
   302  07F9  1C03               	skipc
   303  07FA  2FDC               	goto	l605
   304  07FB                     l32:	
   305                           ;main.c: 88: }
   306                           ;main.c: 91: while(1);
   307                           
   308  07FB  2FFB               	goto	l32
   309  07FC                     __end_of_main:	
   310                           ;main.c: 92: return (0);
   311                           ;	Return value of _main is never used
   312                           
   313                           
   314                           	psect	text1
   315  07AB                     __ptext1:	
   316 ;; *************** function _writeEEPROM *****************
   317 ;; Defined at:
   318 ;;		line 119 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;  address         1    wreg     unsigned char 
   321 ;;  data            1    0[COMMON] unsigned char 
   322 ;; Auto vars:     Size  Location     Type
   323 ;;  address         1    1[COMMON] unsigned char 
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   333 ;;      Params:         1       0       0       0       0
   334 ;;      Locals:         1       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0
   336 ;;      Totals:         2       0       0       0       0
   337 ;;Total ram usage:        2 bytes
   338 ;; Hardware stack levels used:    1
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		_main
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           
   347                           ;psect for function _writeEEPROM
   348  07AB                     _writeEEPROM:	
   349                           
   350                           ;incstack = 0
   351                           ; Regs used in _writeEEPROM: [wreg]
   352                           ;writeEEPROM@address stored from wreg
   353  07AB  00F1               	movwf	writeEEPROM@address
   354  07AC                     l46:	
   355                           ;main.c: 121: continue;
   356                           
   357                           ;main.c: 120: while(EECON1bits.WR){
   358                           
   359  07AC  1683               	bsf	3,5	;RP0=1, select bank3
   360  07AD  1703               	bsf	3,6	;RP1=1, select bank3
   361  07AE  188C               	btfsc	12,1	;volsfr
   362  07AF  2FAC               	goto	l46
   363                           
   364                           ;main.c: 122: }
   365                           ;main.c: 123: EEADR = address;
   366  07B0  0871               	movf	writeEEPROM@address,w
   367  07B1  1283               	bcf	3,5	;RP0=0, select bank2
   368  07B2  1703               	bsf	3,6	;RP1=1, select bank2
   369  07B3  008D               	movwf	13	;volatile
   370                           
   371                           ;main.c: 124: EEDATA = data;
   372  07B4  0870               	movf	writeEEPROM@data,w
   373  07B5  008C               	movwf	12	;volatile
   374                           
   375                           ;main.c: 125: EECON1bits.EEPGD = 0;
   376  07B6  1683               	bsf	3,5	;RP0=1, select bank3
   377  07B7  1703               	bsf	3,6	;RP1=1, select bank3
   378  07B8  138C               	bcf	12,7	;volsfr
   379                           
   380                           ;main.c: 126: STATUSbits.CARRY = 0;
   381  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   382  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   383  07BB  1003               	bcf	3,0	;volatile
   384                           
   385                           ;main.c: 127: if(INTCONbits.GIE){
   386  07BC  1B8B               	btfsc	11,7	;volatile
   387                           
   388                           ;main.c: 128: STATUSbits.CARRY = 1;
   389  07BD  1403               	bsf	3,0	;volatile
   390                           
   391                           ;main.c: 129: }
   392                           ;main.c: 130: GIE = 0;
   393  07BE  138B               	bcf	11,7	;volatile
   394                           
   395                           ;main.c: 131: EECON1bits.WREN = 1;
   396  07BF  1683               	bsf	3,5	;RP0=1, select bank3
   397  07C0  1703               	bsf	3,6	;RP1=1, select bank3
   398  07C1  150C               	bsf	12,2	;volsfr
   399                           
   400                           ;main.c: 134: EECON2 = 0x55;
   401  07C2  3055               	movlw	85
   402  07C3  008D               	movwf	13	;volsfr
   403                           
   404                           ;main.c: 135: EECON2 = 0xAA;
   405  07C4  30AA               	movlw	170
   406  07C5  008D               	movwf	13	;volsfr
   407                           
   408                           ;main.c: 136: EECON1bits.WR = 1;
   409  07C6  148C               	bsf	12,1	;volsfr
   410                           
   411                           ;main.c: 137: EECON1bits.WREN = 0;
   412  07C7  110C               	bcf	12,2	;volsfr
   413                           
   414                           ;main.c: 139: if(STATUSbits.CARRY){
   415  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   416  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   417  07CA  1C03               	btfss	3,0	;volatile
   418  07CB  0008               	return
   419                           
   420                           ;main.c: 140: GIE = 1;
   421  07CC  178B               	bsf	11,7	;volatile
   422  07CD  0008               	return
   423  07CE                     __end_of_writeEEPROM:	
   424                           
   425                           	psect	text2
   426  079E                     __ptext2:	
   427 ;; *************** function _readEEPROM *****************
   428 ;; Defined at:
   429 ;;		line 112 in file "main.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;  address         1    wreg     unsigned char 
   432 ;; Auto vars:     Size  Location     Type
   433 ;;  address         1    0[COMMON] unsigned char 
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      unsigned char 
   436 ;; Registers used:
   437 ;;		wreg
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   443 ;;      Params:         0       0       0       0       0
   444 ;;      Locals:         1       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0
   446 ;;      Totals:         1       0       0       0       0
   447 ;;Total ram usage:        1 bytes
   448 ;; Hardware stack levels used:    1
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           
   457                           ;psect for function _readEEPROM
   458  079E                     _readEEPROM:	
   459                           
   460                           ;incstack = 0
   461                           ; Regs used in _readEEPROM: [wreg]
   462                           ;readEEPROM@address stored from wreg
   463  079E  00F0               	movwf	readEEPROM@address
   464                           
   465                           ;main.c: 113: EEADR = address;
   466  079F  0870               	movf	readEEPROM@address,w
   467  07A0  1283               	bcf	3,5	;RP0=0, select bank2
   468  07A1  1703               	bsf	3,6	;RP1=1, select bank2
   469  07A2  008D               	movwf	13	;volatile
   470                           
   471                           ;main.c: 114: EECON1bits.EEPGD = 0;
   472  07A3  1683               	bsf	3,5	;RP0=1, select bank3
   473  07A4  1703               	bsf	3,6	;RP1=1, select bank3
   474  07A5  138C               	bcf	12,7	;volsfr
   475                           
   476                           ;main.c: 115: EECON1bits.RD = 1;
   477  07A6  140C               	bsf	12,0	;volsfr
   478                           
   479                           ;main.c: 116: return (EEDATA);
   480  07A7  1283               	bcf	3,5	;RP0=0, select bank2
   481  07A8  1703               	bsf	3,6	;RP1=1, select bank2
   482  07A9  080C               	movf	12,w	;volatile
   483  07AA  0008               	return
   484  07AB                     __end_of_readEEPROM:	
   485                           
   486                           	psect	text3
   487  078F                     __ptext3:	
   488 ;; *************** function _initSystem *****************
   489 ;; Defined at:
   490 ;;		line 100 in file "main.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, status,2, status,0, pclath, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   504 ;;      Params:         0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0
   507 ;;      Totals:         0       0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels used:    1
   510 ;; Hardware stack levels required when called:    1
   511 ;; This function calls:
   512 ;;		_initOSC
   513 ;; This function is called by:
   514 ;;		_main
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _initSystem
   520  078F                     _initSystem:	
   521                           
   522                           ;main.c: 101: initOSC();
   523                           
   524                           ;incstack = 0
   525                           ; Regs used in _initSystem: [wreg+status,2+status,0+pclath+cstack]
   526  078F  120A  118A  2793   	fcall	_initOSC
   527  0792  0008               	return
   528  0793                     __end_of_initSystem:	
   529                           
   530                           	psect	text4
   531  0793                     __ptext4:	
   532 ;; *************** function _initOSC *****************
   533 ;; Defined at:
   534 ;;		line 104 in file "main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		_initSystem
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           
   562                           ;psect for function _initOSC
   563  0793                     _initOSC:	
   564                           
   565                           ;main.c: 105: OSCCONbits.IRCF = 0b110;
   566                           
   567                           ;incstack = 0
   568                           ; Regs used in _initOSC: [wreg+status,2+status,0]
   569  0793  1683               	bsf	3,5	;RP0=1, select bank1
   570  0794  1303               	bcf	3,6	;RP1=0, select bank1
   571  0795  080F               	movf	15,w	;volatile
   572  0796  398F               	andlw	-113
   573  0797  3860               	iorlw	96
   574  0798  008F               	movwf	15	;volatile
   575                           
   576                           ;main.c: 106: OSCCONbits.OSTS = 0;
   577  0799  118F               	bcf	15,3	;volatile
   578                           
   579                           ;main.c: 107: OSCCONbits.HTS = 1;
   580  079A  150F               	bsf	15,2	;volatile
   581                           
   582                           ;main.c: 108: OSCCONbits.LTS = 1;
   583  079B  148F               	bsf	15,1	;volatile
   584                           
   585                           ;main.c: 109: OSCCONbits.SCS = 1;
   586  079C  140F               	bsf	15,0	;volatile
   587  079D  0008               	return
   588  079E                     __end_of_initOSC:	
   589  007E                     btemp	set	126	;btemp
   590  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_writeEEPROM

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4     227
                                              2 COMMON     8     4      4
                         _initSystem
                         _readEEPROM
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          2     1      1      97
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initSystem                                           0     0      0       0
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initSystem
     _initOSC
   _readEEPROM
   _writeEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Aug 01 09:05:24 2017

             __CFG_CP$OFF 0000                        l32 07FB                        l46 07AC  
                     l605 07DC                       _GIE 005F              __CFG_CPD$OFF 0000  
            __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
           __CFG_FCMEN$ON 0000                      _main 07CE                      btemp 007E  
                    start 0000             __CFG_MCLRE$ON 0000               _writeEEPROM 07AB  
      writeEEPROM@address 0071                     ?_main 0072                     _EEADR 010D  
           __CFG_WDTE$OFF 0000           __end_of_initOSC 079E            __CFG_BOREN$OFF 0000  
                   status 0003                     wtemp0 007E           __initialization 07FC  
            __end_of_main 07FC                    ??_main 0076                    _EEDATA 010C  
                  _EECON2 018D             main@read_char 0077            __CFG_PWRTE$OFF 0000  
               ??_initOSC 0070        main@eeprom_address 0078   __end_of__initialization 07FC  
         writeEEPROM@data 0070            __pcstackCOMMON 0070                __pmaintext 07CE  
            ?_writeEEPROM 0070                _readEEPROM 079E                _initSystem 078F  
                 __ptext1 07AB                   __ptext2 079E                   __ptext3 078F  
                 __ptext4 0793                   _initOSC 0793      end_of_initialization 07FC  
       readEEPROM@address 0070            main@write_char 0079               ?_readEEPROM 0070  
    __size_of_writeEEPROM 0023               ?_initSystem 0070       start_initialization 07FC  
__CFG_FOSC$INTRC_NOCLKOUT 0000       __size_of_readEEPROM 000D                 ___latbits 0002  
     __size_of_initSystem 0004                  ?_initOSC 0070              ??_readEEPROM 0070  
              _EECON1bits 018C              ??_initSystem 0070          __size_of_initOSC 000B  
      __end_of_readEEPROM 07AB         __CFG_BOR4V$BOR40V 0000             __size_of_main 002E  
      __end_of_initSystem 0793             ??_writeEEPROM 0071                  main@argc 0072  
                main@argv 0074                _INTCONbits 000B                _OSCCONbits 008F  
     __end_of_writeEEPROM 07CE                _STATUSbits 0003  
